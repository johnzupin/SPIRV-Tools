spirv-tools (2020.4-131-1lunarg18.04-1) bionic; urgency=medium

  [ Steven Perron ]
  * Start SPIRV-Tools v2020.5

  [ Antoni Karpiński ]
  * spirv-fuzz: adds TransformationReplaceCopyObjectWithStoreLoad (#3567)
  * spirv-fuzz: adds TransformationReplaceCopyMemoryWithLoadStore (#3575)

  [ Vasyl Teliman ]
  * spirv-fuzz: Test usages of IdIsIrrelevant fact (#3578)
  * spirv-fuzz: Create a helper in fuzzerutil to reuse function type (#3572)

  [ Ryan Harrison ]
  * Change DEPS rolling script to point at external/ (#3584)

  [ Vasyl Teliman ]
  * spirv-fuzz: Don't use default parameters (#3583)

  [ Alastair Donaldson ]
  * spirv-fuzz: Set message consumer in replayer when shrinking (#3591)

  [ Stefano Milizia ]
  * spirv-fuzz: Split blocks starting with OpPhi before trying to outline (#3581)
  * spirv-fuzz: Generalise transformation access chain (#3546)
  * spirv-fuzz: Relax type checking for int contants (#3573)

  [ Jaebaek Seo ]
  * Preserve OpenCL.DebugInfo.100 through private-to-local pass (#3571)

  [ Antoni Karpiński ]
  * spirv-fuzz: adds TransformationReplaceLoadStoreWithCopyMemory (#3586)

  [ Steven Perron ]
  * build(deps): bump lodash from 4.17.15 to 4.17.19 in /tools/sva (#3596)

  [ Pierre Moreau ]
  * Update OpenCL capabilities validation (#3149)

  [ Jaebaek Seo ]
  * Preserve debug info in scalar replacement pass (#3461)

  [ David Neto ]
  * Avoid operand type range checks (#3379)

  [ Ben Clayton ]
  * CMake: Enable building with BUILD_SHARED_LIBS=1 (#3490)

  [ rdb ]
  * Fix SyntaxWarning in Python 3.8 (#3388)

  [ André Perez ]
  * spirv-fuzz: Implement the OpTranspose linear algebra case (#3589)

  [ Ryan Harrison ]
  * Rolling 4 dependencies (#3601)

  [ André Perez ]
  * spirv-fuzz: Add condition to make functions livesafe (#3587)

  [ Alastair Donaldson ]
  * Avoid use of 'sanity' and 'sanity check' in the code base (#3585)

  [ Vasyl Teliman ]
  * spirv-fuzz: Remove non-deterministic behaviour (#3608)
  * spirv-fuzz: Relax type constraints in DataSynonym facts (#3602)

  [ dan sinclair ]
  * Update some language usage. (#3611)

  [ Vasyl Teliman ]
  * spirv-fuzz: Compute corollary facts from OpBitcast (#3538)

  [ André Perez ]
  * spirv-fuzz: Implement the OpOuterProduct linear algebra case (#3617)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix memory bugs (#3622)

  [ alan-baker ]
  * Validator support for non-semantic clspv reflection (#3618)

  [ Jaebaek Seo ]
  * Debug info preservation in loop-unroll pass (#3548)

  [ Stefano Milizia ]
  * spirv-fuzz: Pass to replace int operands with ints of opposite signedness (#3612)
  * spirv-fuzz: Transformation to add loop preheader (#3599)

  [ John Zupin ]
  * debian: remove README.Debian

  [ Vasyl Teliman ]
  * Fix typo in ASAN CI build (#3623)

  [ Jaebaek Seo ]
  * Remove DebugDeclare only for target variables in ssa-rewrite (#3511)

  [ Vasyl Teliman ]
  * spirv-fuzz: TransformationMoveInstructionDown (#3477)
  * spirv-fuzz: Refactor boilerplate in TransformationAddParameter (#3625)
  * spirv-fuzz: Handle capabilities during module donation (#3651)
  * spirv-fuzz: Remove OpFunctionCall operands in correct order (#3630)
  * spirv-fuzz: Fix FuzzerPassCopyObjects (#3638)
  * spirv-fuzz: Handle OpPhi during constant obfuscation (#3640)
  * spirv-fuzz: Handle OpPhis in livesafe functions (#3642)

  [ André Perez ]
  * spirv-opt: Improve the code of the Instruction class (#3610)

  [ Jaebaek Seo ]
  * OpenCL.DebugInfo.100 DebugTypeArray with variable size (#3549)

  [ Stefano Milizia ]
  * spirv-fuzz: make outliner pass use additional transformations (#3604)

  [ André Perez ]
  * spirv-fuzz: iterate over blocks in replace linear algebra pass (#3654)
  * spirv-fuzz: Add TransformationMakeVectorOperationDynamic (#3597)

  [ Antoni Karpiński ]
  * spirv-fuzz: TransformationReplaceAddSubMulWithCarryingExtended (#3598)

  [ Steven Perron ]
  * Avoid using /MP4 for clang on windows. (#3662)

  [ Ryan Harrison ]
  * Roll 2 dependencies (#3677)

  [ Steven Perron ]
  * Handle no index access chain in local access chain convert (#3678)

  [ Vasyl Teliman ]
  * spirv-fuzz: FuzzerPassPropagateInstructionsUp (#3478)

  [ André Perez ]
  * spirv-opt: Add spvOpcodeIsAccessChain (#3682)
  * spirv-fuzz: Fix in operand type assertion (#3666)

  [ alan-baker ]
  * Only validation locations for appropriate execution models (#3656)

  [ Jaebaek Seo ]
  * Validate more OpenCL.DebugInfo.100 instructions (#3684)
  * Preserve debug info in dead-insert-elim pass (#3652)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix width in FuzzerPassAddEquationInstructions (#3685)
  * Fix the bug (#3683)

  [ André Perez ]
  * spirv-fuzz: Ignore specialization constants (#3664)
  * spirv-fuzz: consider additional access chain instructions (#3672)
  * spirv-fuzz: Check integer and float width capabilities (#3670)

  [ Vasyl Teliman ]
  * Fix the bug (#3680)

  [ alan-baker ]
  * Improve non-semantic instruction handling in the optimizer (#3693)

  [ Vasyl Teliman ]
  * spirv-fuzz: Support identical predecessors in TransformationPropagateInstructionUp (#3689)

  [ Stefano Milizia ]
  * spirv-fuzz: Fuzzer pass to randomly apply loop preheaders (#3668)

  [ Antoni Karpiński ]
  * spirv-fuzz: Improve code coverage of tests (#3686)

  [ Jaebaek Seo ]
  * Allow DebugTypeTemplate for Type operand (#3702)

  [ André Perez ]
  * spirv-fuzz: Check header dominance when adding dead block (#3694)

  [ Jack Andersen ]
  * Fix -Wrange-loop-analysis warning (#3712)

  [ André Perez ]
  * spirv-fuzz: Check termination instructions when donating modules (#3710)
  * spirv-opt: Implement opt::Function::HasEarlyReturn function (#3711)

  [ Jaebaek Seo ]
  * Let ADCE pass check DebugScope (#3703)

  [ Antoni Karpiński ]
  * spirv-fuzz: Support pointer types in FuzzerPassAddParameters (#3627)
  * spirv-fuzz: add FuzzerPassAddCompositeInserts (#3606)

  [ Diego Novillo ]
  * CCP should mark IR changed if it created new constants. (#3732)

  [ André Perez ]
  * spirv-fuzz: Add words instead of logical operands (#3728)

  [ Steven Perron ]
  * Add undef for inlined void function (#3720)

  [ greg-lunarg ]
  * Fix SSA-rewrite to remove DebugDeclare for variables without loads (#3719)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix MaybeGetZeroConstant (#3740)

  [ André Perez ]
  * spirv-fuzz: Add inline function transformation (#3517)

  [ Vasyl Teliman ]
  * spirv-fuzz: Split the fact manager into multiple files (#3699)

  [ greg-lunarg ]
  * Fix DebugNoScope to not output InlinedAt operand. (#3748)

  [ Alastair Donaldson ]
  * spirv-fuzz: Overflow ids (#3734)

  [ Jaebaek Seo ]
  * Handle DebugScope in compact-ids pass (#3724)

  [ greg-lunarg ]
  * Do not register DebugFunction for functions optimized away. (#3749)

  [ Alastair Donaldson ]
  * spirv-fuzz: Do not make synonyms of void result ids (#3747)

  [ Stefano Milizia ]
  * Add LoopNestingDepth function to StructuredCFGAnalysis (#3754)
  * spirv-fuzz: Create synonym via OpPhi and existing synonyms (#3701)

  [ Alastair Donaldson ]
  * spirv-fuzz: Remove opaque pointer design pattern (#3755)

  [ Jaebaek Seo ]
  * Correctly replace debug lexical scope of instruction (#3718)

  [ Stefano Milizia ]
  * spirv-fuzz: Compute interprocedural loop nesting depth of blocks (#3753)

  [ Vasyl Teliman ]
  * spirv-fuzz: TransformationMutatePointer (#3737)

  [ Stefano Milizia ]
  * spirv-fuzz: Transformation to replace the use of an irrelevant id (#3697)
  * spirv-fuzz: Replace id in OpPhi coming from a dead predecessor (#3744)
  * spirv-fuzz: Fix GetIdEquivalenceClasses (#3767)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add support for BuiltIn decoration (#3736)

  [ sfricke-samsung ]
  * spirv-val: Add Vulkan VUID labels to BuiltIn (#3756)

  [ Stefano Milizia ]
  * spirv-fuzz: Transformation to convert OpSelect to conditional branch (#3681)
  * spirv-opt: Add function to compute nesting depth of a block (#3771)

  [ Steven Perron ]
  * Allow SPV_KHR_8bit_storage extension. (#3780)

  [ Paul Thomson ]
  * Improve spirv-fuzz CMake code (#3781)
  * Add missing include (#3788)
  * spirv-fuzz: Add SPIRV_FUZZ_PROTOC_COMMAND (#3789)

  [ Antoni Karpiński ]
  * spirv-fuzz: Fix header guards in transformations/fuzzer passes (#3784)

  [ Alastair Donaldson ]
  * Favour 'integrity' over 'coherence' as a replacement for 'sanity'. (#3619)
  * spirv-reduce: Refactoring (#3793)
  * spirv-reduce: Support reducing a specific function (#3774)

  [ Antoni Karpiński ]
  * spirv-fuzz: Add TransformationDuplicateRegionWithSelection (#3773)

  [ Alastair Donaldson ]
  * Add missing file to BUILD.gn (#3798)

  [ Diego Novillo ]
  * Properly mark IR changed if instruction folder creates more than one constant. (#3799)

  [ sfricke-samsung ]
  * spirv-val: Add BaseInstance, BaseVertex, DrawIndex, and ViewIndex (#3782)

  [ Stefano Milizia ]
  * spirv-fuzz: Transformation to flatten conditional branch (#3667)
  * spirv-fuzz: Pass submanagers to other submanagers when necessary (#3796)

  [ Vasyl Teliman ]
  * spirv-fuzz: Support memory instructions MoveInstructionDown (#3700)
  * spirv-fuzz: Handle invalid ids in fact manager (#3742)

  [ Alastair Donaldson ]
  * Fix build errors (#3804)

  [ Vasyl Teliman ]
  * spirv-fuzz: Skip unreachable blocks (#3729)

  [ André Perez ]
  * spirv-fuzz: Add bit instruction synonym transformation (#3775)

  [ Vasyl Teliman ]
  * spirv-fuzz: Remove CanFindOrCreateZeroConstant (#3807)

  [ greg-lunarg ]
  * Add buffer oob check to bindless instrumentation (#3800)

  [ Stefano Milizia ]
  * spirv-fuzz: Improvements to random number generation (#3809)

  [ André Perez ]
  * spirv-fuzz: Use an irrelevant id for the unused components (#3810)

  [ Ryan Harrison ]
  * Fix missed modification flagging (#3814)

  [ sfricke-samsung ]
  * spirv-val: Add DeviceIndex (#3812)

  [ Antoni Karpiński ]
  * spirv-fuzz: Fix TransformationDuplicateRegionWithSelection (#3815)

  [ Alastair Donaldson ]
  * Fix header guard macros (#3811)

  [ Stefano Milizia ]
  * spirv-fuzz: Consider all ids from dead blocks irrelevant (#3795)

  [ Alastair Donaldson ]
  * spirv-fuzz: Add pass recommendations (#3757)
  * spirv-fuzz: Refactor fuzzer, replayer and shrinker (#3818)

  [ Steven Perron ]
  * Update CHANGES

 -- John Zupin <john@odin>  Mon, 28 Sep 2020 16:49:27 -0600

spirv-tools (2020.4-1lunarg18.04-1) bionic; urgency=medium

  [ Steven Perron ]
  * Start SPIRV-Tools v2020.4

  [ Ryan Harrison ]
  * Rolling 4 dependencies (#3380)

  [ André Perez ]
  * spirv-fuzz: Add push id through variable transformation (#3359)

  [ Jaebaek Seo ]
  * Add tests for merge-return debug info preservation (#3389)

  [ Paul Thomson ]
  * Fix googletest inclusion (#3398)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix regression (#3396)

  [ André Perez ]
  * Fix instruction function use (#3390)
  * Add value instruction condition (#3385)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix replayer bug (#3401)
  * spirv-fuzz: Add support for OpSpecConstant* (#3373)
  * spirv-fuzz: Add a test (#3238)

  [ David Neto ]
  * Fix round trip tests that weren't instantiated (#3417)

  [ Jaebaek Seo ]
  * Debug info preservation in ccp pass (#3420)

  [ Vasyl Teliman ]
  * Fix operand access (#3427)

  [ dan sinclair ]
  * Update access control lists. (#3433)

  [ André Perez ]
  * spirv-fuzz: Add replace linear algebra instruction transformation (#3402)
  * spirv-fuzz: Implement vector shuffle fuzzer pass (#3412)

  [ Ehsan ]
  * Eliminate branches with condition of OpConstantNull (#3438)

  [ Vasyl Teliman ]
  * Fix return type (#3435)
  * Add RemoveParameter method (#3437)

  [ Jaebaek Seo ]
  * Debug info preservation in dead branch elimination (#3425)

  [ Steven Perron ]
  * Use structured order to unroll loops. (#3443)

  [ Vasyl Teliman ]
  * spirv-fuzz: Swap operands in OpBranchConditional (#3423)
  * spirv-fuzz: Refactor variable creation (#3414)

  [ Ehsan ]
  * Updated desc_sroa to support flattening structures (#3448)

  [ Jaebaek Seo ]
  * [spirv-opt] debug info preservation in ssa-rewrite (#3356)

  [ Ryan Harrison ]
  * Add support for different default/trunks in roll-deps (#3442)

  [ Vasyl Teliman ]
  * spirv-fuzz: Permute OpPhi instruction operands (#3421)
  * spirv-fuzz: Add GetParameters (#3454)
  * spirv-fuzz: Implement FuzzerPassAddParameters (#3399)

  [ Ehsan ]
  * Support OpCompositeExtract pattern in desc_sroa (#3456)

  [ alan-baker ]
  * Validate location assignments (#3308)

  [ Jaebaek Seo ]
  * Clear debug information for kill and replacement (#3459)

  [ André Perez ]
  * Implement the OpMatrixTimesScalar linear algebra case (#3450)

  [ Ehsan ]
  * Add gl_BaseInstance to the name mapper. (#3462)

  [ Jaebaek Seo ]
  * Fix ADCE pass bug for mulitple entries (#3470)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add one parameter at a time (#3469)
  * spirv-fuzz: Add FuzzerPassAddCopyMemoryInstructions (#3391)
  * spirv-fuzz: Add fuzzerutil::FindOrCreate* (#3479)
  * Fix regression (#3481)
  * spirv-fuzz: TransformationInvertComparisonOperator (#3475)

  [ Jaebaek Seo ]
  * Debug info preservation in copy-prop-array pass (#3444)

  [ Vasyl Teliman ]
  * spirv-fuzz: fuzzerutil::MaybeGetConstant* #3487

  [ André Perez ]
  * spirv-fuzz: Implement the OpVectorTimesMatrix linear algebra case (#3489)
  * spirv-fuzz: Add variables with workgroup storage class (#3485)
  * spirv-fuzz: Add image sample unused components transformation (#3439)

  [ Jaebaek Seo ]
  * Preserve OpenCL.100.DebugInfo in reduce-load-size pass (#3492)

  [ André Perez ]
  * Implement the OpMatrixTimesVector linear algebra case (#3500)

  [ Vasyl Teliman ]
  * spirv-fuzz: TransformationReplaceParameterWithGlobal (#3434)

  [ greg-lunarg ]
  * Upgrade elim-local-single-block for OpenCL.DebugInfo.100 (#3451)

  [ Jaebaek Seo ]
  * Fix build failure (#3508)

  [ Stefano Milizia ]
  * Implement transformation to record synonymous constants. (#3494)

  [ Jaebaek Seo ]
  * Preserve debug info in vector DCE pass (#3497)

  [ greg-lunarg ]
  * Preserve OpenCL.DebugInfo.100 through elim-local-single-store (#3498)

  [ Vasyl Teliman ]
  * spirv-fuzz: Minor refactoring (#3507)
  * spirv-fuzz: Remove unused functions (#3510)
  * spirv-fuzz: TransformationAddSynonyms (#3447)

  [ André Perez ]
  * Support OpPhi when replacing boolean constant operand (#3518)
  * spirv-fuzz: Support adding dead break from back-edge block (#3519)

  [ greg-lunarg ]
  * Add support to GPU-AV instrumentation for Task and Mesh shaders (#3512)

  [ André Perez ]
  * spirv-fuzz: Implement the OpMatrixTimesMatrix linear algebra case (#3527)
  * spirv-fuzz: Fix instruction insertion issue (#3521)

  [ Jaebaek Seo ]
  * Rewrite KillDebugDeclares() (#3513)

  [ Alastair Donaldson ]
  * spirv-fuzz: Add replay range option (#3535)

  [ Stefano Milizia ]
  * spirv-fuzz: Fuzzer pass to interchange zero-like constants (#3524)

  [ Vasyl Teliman ]
  * spirv-opt: Add support for OpLabel to dominator analysis (#3516)
  * spirv-fuzz: Remove TransformationCopyObject (#3531)

  [ alan-baker ]
  * Fix reachability in the validator (#3541)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add support for OpConvert to TransformationEquationInstruction (#3472)
  * spirv-fuzz: Add support for OpBitcast to TransformationEquationInstruction (#3523)

  [ Stefano Milizia ]
  * spirv-fuzz: Assert false in IsApplicable method of TransformationAccessChain (#3528)
  * spirv-fuzz: Implement MaybeApplyTransformation helper function (#3540)
  * Change MaybeApplyTransformation to return a boolean (#3555)

  [ Antoni Karpiński ]
  * spirv-fuzz: support floating-point in TransformationInvertComparisonOperator (#3551)

  [ David Neto ]
  * Permit Simple and GLSL450 memory model in WEBGPU_0 (#3463)

  [ alan-baker ]
  * Store location values sparsely (#3488)

  [ Antoni Karpiński ]
  * spirv-fuzz: add TransformationAddRelaxedDecoration (#3545)

  [ Stefano Milizia ]
  * spirv-fuzz: refactor to use RemoveAtRandomIndex (#3560)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add IdIsIrrelevant fact (#3561)
  * spirv-fuzz: Add is_irrelevant parameter (#3563)

  [ Stefano Milizia ]
  * spirv-fuzz: Extend TransformationRecordSynonymousConstants to allow composite constants (#3537)

  [ Vasyl Teliman ]
  * spirv-fuzz: Use irrelevant constants (#3565)

  [ vkushwaha-nv ]
  * Add changes for SPV_EXT_shader_atomic_float (#3562)

  [ Vasyl Teliman ]
  * spirv-fuzz: TransformationReplaceParamsWithStruct (#3455)

  [ greg-lunarg ]
  * Preserve OpenCL.DebugInfo.100 through elim-dead-code-aggressive (#3542)

  [ Steven Perron ]
  * Sink pointer instructions in merge return (#3569)

  [ alan-baker ]
  * Support SPV_KHR_terminate_invocation (#3568)

  [ Steven Perron ]
  * Update CHANGES

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix usages of irrelevant constants (#3566)

  [ Steven Perron ]
  * Finalize SPIRV-Tools v2020.4

  [ John Zupin ]
  * copyright: update for release
  * copyright: updated for lunarg debian files

 -- John Zupin <john@odin>  Mon, 27 Jul 2020 14:17:04 -0600

spirv-tools (2020.3-1) bionic; urgency=medium

  * Initial release (Closes: #nnnn)  <nnnn is the bug number of your ITP>

 -- John Zupin <john@unknown>  Tue, 23 Jun 2020 12:12:22 -0600
