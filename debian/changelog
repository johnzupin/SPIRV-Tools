spirv-tools (2022.1+33~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Jakub Kuderski ]
  * Finalize SPIRV-Tools v2021.4
  * Start SPIRV-Tools v2021.5

  [ alan-baker ]
  * Allow ADCE to remove dead inputs (#4629)

  [ Steven Perron ]
  * Manually fold floating point division by zero (#4637)

  [ Natalie Chouinard ]
  * Remove default arguments from lambda (#4648)
  * Copy OpDecorateStrings in DescriptorScalarReplacementPass (#4649)

  [ Diego Novillo ]
  * Fix https://github.com/KhronosGroup/SPIRV-Tools/issues/4462 (#4651)

  [ Alastair Donaldson ]
  * Exit when ID overflow occurs in a fuzzing build (#4652)
  * Avoid uninitialised read when parsing hex float (#4646)

  [ Shahbaz Youssefi ]
  * Use schema instead of reserved in header description (#4615)

  [ Marius Hillenbrand ]
  * Fix endianness of string literals (#4622)

  [ Sebastien Alaiwan ]
  * Avoid an extra map lookup (#4623)

  [ Steven Perron ]
  * Fix kokoro asan run (#4655)

  [ Sebastien Alaiwan ]
  * Use a struct (instead of tuple), with explicit member names. (#4621)
  * DefUseManager: rename comparison operators to 'CompareAndPrintDifferences' (#4624)

  [ Andrei Malashkin ]
  * treat google user type as normal semantic google. It's a backport from diligent fork (#4632)

  [ jiaxin.lai ]
  * fix file encoding (#4654)

  [ Sebastien Alaiwan ]
  * Fix compilation (#4656)

  [ Dave Airlie ]
  * optimizer: restore previous ABI. (#4653)

  [ Alastair Donaldson ]
  * Simplify the as fuzzer target (#4647)

  [ SpaceIm ]
  * CMake iOS fixes: rely on CMAKE_SYSTEM_NAME and handle bundle installation (#4619)

  [ Alastair Donaldson ]
  * Avoid id bound errors during opt fuzzing (#4658)

  [ Shahbaz Youssefi ]
  * Refactor the disassembler code for reuse (#4616)

  [ Steven Perron ]
  * Rename strip reflect to strip nonsemantic (#4661)
  * reflect debug (#4662)

  [ alan-baker ]
  * Basic support for SPIR-V 1.6 (#4663)

  [ David Neto ]
  * Patch location validation VUIDs (#4664)
  * val: interface struct with builtins must be Block (#4665)

  [ Alastair Donaldson ]
  * Avoid uninitialized access to instruction opcode (#4673)
  * Fix opt fuzzer test harness (#4670)

  [ Steven Perron ]
  * Remove misleading comment. (#4676)

  [ Pierre Moreau ]
  * Improvements to disassembly within PassManager (#4677)

  [ Minmin Gong ]
  * Disable a codepage warning on non-English OS (#4668)

  [ Pierre Moreau ]
  * Remove duplicated "the" from comments (#4666)

  [ David Neto ]
  * Add SPIR-V 1.6 support to wasm build (#4674)

  [ Pierre Moreau ]
  * Linker improvements (#4679)
  * linker: Address conversion error introduced in earlier rework (#4685)

  [ smikims ]
  * Avoid infinite recursion in comparison operators on SmallVector (#4681)

  [ alan-baker ]
  * Vulkan 1.3 (#4686)

  [ Jaebaek Seo ]
  * spirv-opt: add pass to Spread Volatile semantics (#4667)

  [ Steven Perron ]
  * Fix roll_deps.sh (#4687)

  [ Diego Novillo ]
  * Update DEPS file (#4688)
  * Update CHANGES
  * Finalize SPIRV-Tools v2022.1
  * Start SPIRV-Tools v2022.2

  [ luzpaz ]
  * Fix various source comment (doxygen) typos (#4680)

  [ David Neto ]
  * Fix typo in comment: SPIR-V section for debug instructions (#4683)

  [ John Zupin ]
  * packaging: update copyright

  [ alan-baker ]
  * Fix handling of Nontemporal image operand (#4692)

  [ Steven Perron ]
  * Complete handling of RayQueryKHR type (#4690)

  [ Jakub Kuderski ]
  * Update CHANGES

 -- John Zupin <john@odin>  Thu, 03 Feb 2022 14:05:38 -0700

spirv-tools (2021.3+86~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Jaebaek Seo ]
  * Start SPIRV-Tools v2021.4

  [ gnl21 ]
  * Add a feature for allowing LocalSizeId (#4492)

  [ Jakub Kuderski ]
  * spirv-lint: Add lint based on divergence analysis (#4488)

  [ Lei Zhang ]
  * Only add `-DSPIRV_CHECK_CONTEXT` for Debug builds (#4496)

  [ Steven Perron ]
  * Handle exported functions in ADCE (#4495)

  [ Jaebaek Seo ]
  * Set threshold for reduce-load-size pass (#4499)

  [ Alastair Donaldson ]
  * Adjust build for fuzzer targets to support OSS-Fuzz (#4498)

  [ David Neto ]
  * fix parsing of bad binary exponents in hex floats (#4501)

  [ gnl21 ]
  * Remove environment features that are never used (#4491)

  [ Alastair Donaldson ]
  * spirv-val: Fix ubsan error (#4505)

  [ alan-baker ]
  * Add some missing switch validation (#4507)

  [ Alastair Donaldson ]
  * Add UBSan kokoro configuration (#4512)

  [ David Neto ]
  * Fix validation message for cooperative matrix column type (#4502)

  [ alan-baker ]
  * Fix infinite loop in GetBlockDepth (#4519)
  * Change validator boolean tests to avoid asserts (#4503)

  [ Steven Perron ]
  * Handle out-of-bounds accesses in VDCE (#4518)

  [ alan-baker ]
  * Fix bad order of checks in atomic validation (#4524)

  [ Alastair Donaldson ]
  * Fix UBSan kokoro config (#4522)

  [ alan-baker ]
  * Fix infinite loop in validation (#4523)

  [ Steven Perron ]
  * Roll external/googletest/ b7d472f12..955c7f837 (111 commits) (#4521)

  [ Alastair Donaldson ]
  * spirv-opt: Avoid integer overflow during constant folding (#4511)
  * spirv-fuzz: Account for differing signedness in WrapVectorSynonym (#4414)

  [ Greg Fischer ]
  * Add preserve_interface mode to aggressive_dead_code_elim (#4520)
  * spirv-opt: Switch from Vulkan.DebugInfo to Shader.DebugInfo (#4493)

  [ Steven Perron ]
  * Fix extract with out-of-bounds index (#4529)

  [ Alastair Donaldson ]
  * Fix UBSan error in spirv-dis fuzzer (#4517)

  [ alan-baker ]
  * Fix checks for offset in nested structs (#4531)
  * Update SPIRV-Headers (#4543)

  [ Jamie Madill ]
  * GN: Fix build for debuginfo codegen. (#4536)

  [ Greg Fischer ]
  * Fix inst_buff_addr_check to handle struct loads (#4489)
  * Handle NonSemantic.Shader Debug[No]Line (#4530)

  [ Steven Perron ]
  * Adce refactor (NFC) (#4547)

  [ Alastair Donaldson ]
  * Suppress protobuf warning (#4551)

  [ alan-baker ]
  * Do not assume there are execution modes (#4555)

  [ Lukas Hermanns ]
  * spirv-opt: Don't eliminate dead members from StructuredBuffer (#4553)

  [ David Neto ]
  * Avoid implicit fallthrough, by duplicating code (#4556)

  [ Steven Perron ]
  * More ADCE refactoring (#4548)

  [ Ryan Harrison ]
  * Stop consuming input in fuzzers to select target environment (#4544)

  [ Greg Fischer ]
  * Fix ConstantManager to not run AnalyzeInstDefUse if DefUse not valid (#4557)

  [ Alastair Donaldson ]
  * Include a maximum value for spv_target_env (#4559)

  [ David Neto ]
  * Avoid bugprone-move-forwarding-reference warning in Clang (#4560)

  [ Jaebaek Seo ]
  * Fix CI failure (#4570)

  [ Greg Fischer ]
  * Fix merge-block assertions with debugInfo (#4563)

  [ alan-baker ]
  * Update SPIRV-Headers (#4573)

  [ Ryan Harrison ]
  * Use max enum instead of static array of legal values (#4571)

  [ Alastair Donaldson ]
  * Fix output of SPIR-V version in diagnostic (#4562)

  [ David Neto ]
  * Enable OpConstFunctionPointerINTEL outside function (#4576)

  [ Greg Fischer ]
  * Mark DebugInfoNone as live in ADCE when DebugInfo present (#4568)

  [ David Neto ]
  * Remove Appveyor CI, update README (#4578)

  [ alan-baker ]
  * Account for strided components in arrays (#4575)
  * Consider 0xffffffff offset as missing (#4564)

  [ JiaoluAMD ]
  * Opt passes should apply to the exported functions (#4554)

  [ David Neto ]
  * README: Update tested versions of compilers (#4579)
  * README: Remove appveyor build badge. (#4584)

  [ Greg Fischer ]
  * Generate constants directly in CreateDebugInlinedAt (#4572)

  [ Alastair Donaldson ]
  * Fix i386 build issues related to random generation (#4586)

  [ Dave Airlie ]
  * opt/spec_constants: fix bit pattern width checks. (#4588)

  [ David Neto ]
  * opt: set upper bits of spec constant according to spec (#4589)

  [ alan-baker ]
  * Handle missing execution modes for limitation check (#4594)

  [ Alastair Donaldson ]
  * Add libFuzzer target for spirv-fuzz (#4434)

  [ Steven Perron ]
  * Make IsLocalVar in ADCE work at any time. (NFC) (#4595)

  [ Jaebaek Seo ]
  * Add spirv-opt pass to replace descriptor accesses based on variable indices (#4574)

  [ Steven Perron ]
  * Do not fold snegate feeding sdiv. (#4600)
  * Delete decorations before replaces uses in dead branch elim (#4598)
  * Update passes to handle function declarations (#4599)

  [ David Neto ]
  * Avoid confusing short-circuiting (#3404)

  [ alan-baker ]
  * Only validate workgroup layout for explicit workgroup memory (#4542)

  [ Steven Perron ]
  * Fix Linker generator ID (#4601)
  * Change branch handling in ADCE to fix errors (#4596)

  [ sfricke-samsung ]
  * spirv-val Update LocalSizeId VUID (#4602)

  [ timlyeee ]
  * Make cxx exceptions controllable  (#4591)

  [ Ralf Habacker ]
  * In generated cmake config file for SPIRV-Tools only access cmake target, if present (#4590)

  [ Alastair Donaldson ]
  * Avoid bitwise and in boolean expression (#4603)

  [ Steven Perron ]
  * Handle overflowing id in merge return (#4606)

  [ Pelle Johnsen ]
  * Add Wasm build (#3752)

  [ David Neto ]
  * Update CHANGES, README for WebAssembly build (#4609)
  * Remove publish-to-npm step for Wasm build (#4610)
  * Run the wasm build on push and pull_request (#4614)

  [ Jaebaek Seo ]
  * spirv-opt: create OpDecorate for OpMemberDecorate in desc-sroa (#4617)

  [ alan-baker ]
  * Improve decoration validation (#4490)

  [ Jakub Kuderski ]
  * Update CHANGES
  * Update DEPS (#4625)
  * Clarify how to update DEPS (#4626)

  [ Greg Fischer ]
  * Fix handling of OpPhi in convert-relaxed-to-half (#4618)

  [ alan-baker ]
  * Allow WorkgroupSize on variables for Kernels (#4627)
  * Update SPIRV-Headers (#4628)

 -- John Zupin <john@odin>  Tue, 16 Nov 2021 16:10:27 -0700

spirv-tools (2021.3~rc1-1lunarg20.04-1) focal; urgency=medium

  [ sfricke-samsung ]
  * spirv-val: Add GLCompute to VUID 04644 message (#4333)
  * spirv-val: Label VUID 04780 (#4334)

  [ Diego Novillo ]
  * Finalize SPIRV-Tools v2021.2
  * Start SPIRV-Tools v2021.3

  [ David Neto ]
  * fix symbol exports check, for Android build cases (#4342)

  [ Kévin Petit ]
  * Initial support for SPV_KHR_integer_dot_product (#4327)

  [ Jason Ekstrand ]
  * Add validation for SPV_EXT_shader_atomic_float16_add (#4325)

  [ Alastair Donaldson ]
  * spirv-fuzz: Add illustrative tests for new issues (#4347)
  * spirv-reduce: Cleanup a few things (#4352)
  * Add IsReachable function to IRContext (#4323)
  * spirv-reduce: Allow merging unreachable blocks (#4303)

  [ John Zupin ]
  * fix strncpy bound error (#4331)

  [ Steven Perron ]
  * Bump glob-parent from 5.0.0 to 5.1.2. (#4353)

  [ ZHOU He ]
  * spirv-opt: A pass to removed unused input on OpEntryPoint instructions. (#4275)

  [ Assiduous ]
  * Enabled tvOS platform (#4329)

  [ Alastair Donaldson ]
  * spirv-fuzz: Avoid out of bounds access (#4355)

  [ Ben Ashbaugh ]
  * add tests for SPV_KHR_bit_instructions (#4350)

  [ Steven Perron ]
  * Add remove_unused_interface_variable_pass.* to BUILD.gn (#4363)

  [ Alastair Donaldson ]
  * spirv-fuzz: Added tests for signedness analysis (#4361)
  * spirv-fuzz: Check updated analyses in transformation tests (#4266)
  * spirv-reduce: Eliminate skeletal structured control flow construct (#4360)

  [ y-novikov ]
  * Update SPIRV-Headers deps (#4369)

  [ Greg Fischer ]
  * Add non-semantic vulkan extended instruction set (#4362)
  * Fix vendor table build in BUILD.gn for nonsemantic.vulkan.debuginfo.100 (#4375)

  [ Alastair Donaldson ]
  * spirv-fuzz: support building using gn (#4365)
  * Fix BUILD.gn (#4378)

  [ Jaebaek Seo ]
  * spirv-opt: support SPV_EXT_shader_image_int64 (#4379)

  [ pkasting ]
  * Fix -Wunreachable-code-aggressive. (#4358)

  [ Jamie Madill ]
  * Add missing fuzzer header dependency. (#4381)

  [ Mostafa Ashraf ]
  * spirv-fuzz: Don't replace memory semantics / scope operands (#4349)

  [ Jakub Kuderski ]
  * Explain how to run tests with CMake and Bazel (#4383)
  * Don't mention VS2013 in PR review instructions (#4384)

  [ Greg Fischer ]
  * Add common enum for debug info instructions from either opencl or vulkan (#4377)

  [ Chia-I Wu ]
  * CMake: add ENABLE_RTTI option (#4382)

  [ Mostafa Ashraf ]
  * spirv-fuzz: Support atomic operations opcode (#4348)

  [ Shiyu Liu ]
  * spirv-fuzz: TransformationWrapVectorSynonym that rewrites scalar operations using vectors (#4376)

  [ Greg Fischer ]
  * spirv-opt: Where possible make code agnostic of opencl/vulkan debuginfo (#4385)

  [ alan-baker ]
  * Fix local size hint id tests (#4400)

  [ Alastair Donaldson ]
  * spirv-fuzz: Tighten checks on null and undef pointers (#4367)
  * spirv-fuzz: Fix vector wrapping fuzzer pass (#4392)
  * spirv-fuzz: Avoid out-of-bounds access (#4395)
  * spirv-fuzz: Fix problem with instruction context (#4394)

  [ Vasyl Teliman ]
  * Initialize context in `opt::Instruction`'s move constructor (#4397)

  [ Corentin Wallez ]
  * BUILD.gn: introduce finer grained internal targets for Tint (#4399)

  [ krockot ]
  * Fix public deps on generated headers (#4386)

  [ Alastair Donaldson ]
  * spirv-fuzz: Use reference in CanMakeSynonymOf (#4401)

  [ dong-ja ]
  * Add control dependence analysis to opt (#4380)
  * spirv-opt: Add more tests to control dependence  (#4410)

  [ Alastair Donaldson ]
  * spirv-fuzz: Quit fuzzer pass when no types are available (#4409)
  * spirv-fuzz: Allow inapplicable transformations to be ignored (#4407)

  [ Greg Fischer ]
  * spirv-opt: Add specific handling of vulkan debug info differences (#4398)

  [ dong-ja ]
  * spirv-opt: Rename ControlDependenceAnalysis::DoesBlockExist to HasBlock (#4412)

  [ Alastair Donaldson ]
  * spirv-fuzz: Add minimal SPIR-V example to test shaders (#4415)

  [ alan-baker ]
  * Fix validator crash (#4418)

  [ Ben Clayton ]
  * Fuzzer: Default the new constructor parameter (#4438)

  [ Alastair Donaldson ]
  * Add GraphicsFuzz shaders to fuzzer corpus (#4429)

  [ Mostafa Ashraf ]
  * spirv-fuzz: support AtomicLoad (#4330)

  [ Alastair Donaldson ]
  * Add CMake rules for libFuzzer targets (#4445)

  [ Ben Clayton ]
  * fuzzers: Disable suggest-destructor-override warning (#4439)

  [ Mostafa Ashraf ]
  * spirv-fuzz: Support AtomicStore (#4440)

  [ alan-baker ]
  * Fix array layout validation slowdown (#4449)
  * Add a section releases to the README (#4444)

  [ dong-ja ]
  * Add new target for spirv-lint (#4446)
  * Remove PCH from source/lint/CMakeLists.txt (#4459)
  * spirv-opt: Add dataflow analysis framework (#4402)

  [ Greg Fischer ]
  * spirv-opt: Add handling of vulkan debug info to DebugInfoManager (#4423)

  [ alan-baker ]
  * Update SPIRV-Headers (#4463)
  * Limit location validation (#4467)

  [ 5265644D61736F6E ]
  * fix SIGSEGV when reading from a non-existant file (#4453)

  [ Nicolas Capens ]
  * Don't fold unsigned divides of an constant and a negation (#4457)
  * Fix early-out for Clamp constant folding (#4461)

  [ alan-baker ]
  * Disallow loading a runtime-sized array (#4473)

  [ Jaebaek Seo ]
  * Add spirv-opt convert-to-sampled-image pass (#4340)

  [ Jamie Madill ]
  * GN: Suppress unreachable code warnings. (#4476)

  [ alan-baker ]
  * Don't double count variables for location validation (#4474)
  * Fix matrix stride validation (#4468)

  [ dong-ja ]
  * spirv-lint: add basic CLI argument handling (#4478)

  [ sfricke-samsung ]
  * spirv-val: Fix WorkgroupSize VUID 04425 (#4482)

  [ dong-ja ]
  * Add divergence analysis to linter (#4465)

  [ Greg Fischer ]
  * spirv-val: Validate vulkan debug info similarly to opencl debug info (#4466)

  [ Jaebaek Seo ]
  * Update CHANGES
  * Finalize SPIRV-Tools v2021.3

 -- John Zupin <john@odin>  Fri, 27 Aug 2021 15:14:40 -0600

spirv-tools (2021.1+42~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Jakub Kuderski ]
  * Finalize SPIRV-Tools v2021.1
  * Start SPIRV-Tools v2021.2

  [ Mostafa Ashraf ]
  * spirv-fuzz: Permute the order of variables at function scope issue (#4248)

  [ Ben Clayton ]
  * GraphicsRobustAccessPass: Set module_status_.modified (#4167)

  [ Steven Perron ]
  * Fix warning in python script. (#4251)

  [ Shiyu Liu ]
  * spirv-fuzz: Swap positions of two functions in a module (#4236)

  [ Jaebaek Seo ]
  * Support folding OpBitcast with numeric constants (#4247)
  * Fix dangling phi bug from loop-unroll (#4239)

  [ Vasyl Teliman ]
  * Invalidate DefUse analysis (#4255)

  [ Ben Clayton ]
  * Updates to the vscode SPIR-V extension (#4246)

  [ ncesario-lunarg ]
  * build: Fix Android build (#4157)

  [ Steven Perron ]
  * Fix export symbol test. (#4254)

  [ Shiyu Liu ]
  * spirv-fuzz: Fix underflow problem in `fuzzer_pass_swap_two_functions` (#4253)

  [ David Neto ]
  * val test: Update capability dependency (#4268)

  [ Alastair Donaldson ]
  * spirv-fuzz: Respect control flow rules when merging returns (#4279)

  [ alan-baker ]
  * Fix continue construct for single block loops (#4277)

  [ Greg Fischer ]
  * Fix crash when optimizing shaders with DebugPrintf (#4280)

  [ Vasyl Teliman ]
  * Invalidate analyses (#4260)

  [ Alastair Donaldson ]
  * spirv-fuzz: Cover protobuf message creation in tests (#4285)

  [ Mostafa Ashraf ]
  * spirv-fuzz: Enhance test to improve lines covered (#4289)

  [ Vasyl Teliman ]
  * spirv-fuzz: Move ApplyTransformation to .cpp file (#4258)

  [ Mostafa Ashraf ]
  * spirv-fuzz: Enhancing permute function variables and its testing (#4295)

  [ EGJ1996 ]
  * spirv-fuzz: Increase test coverage of TransformationCompositeConstruct (#4301)
  * spirv-fuzz: Added extra tests for AddTypeFloat and AddTypeInt transformations (#4292)

  [ Alastair Donaldson ]
  * spirv-fuzz: Fix def-use update in PermutePhiOperands (#4309)
  * spirv-fuzz: Fix OutlineFunction in presence of unreachable blocks (#4308)

  [ Ryan Harrison ]
  * Check that valid bitcasted constant was returned (#4311)

  [ Mostafa Ashraf ]
  * Spirv-fuzz: Achieve coverage of TransformationAddDeadBlock test  (#4306)

  [ EGJ1996 ]
  * spirv-fuzz: Added test to increase coverage of the add_parameter transformation (#4305)

  [ Shiyu Liu ]
  * spirv-fuzz: add tests for full coverage of TransformationAccessChain (#4304)

  [ Steven Perron ]
  * Remove VS2013 kokoro build (#4314)

  [ Shiyu Liu ]
  * Spirv-fuzz: Add tests for MaybeGet* functions in fuzzerutil (#4284)

  [ Greg Fischer ]
  * Add kInstErrorMax to instrument.hpp (#4315)

  [ Jaebaek Seo ]
  * No error report for variable image offset when before-legal-hlsl is on (#4316)

  [ Steven Perron ]
  * Update lodash (#4317)

  [ EGJ1996 ]
  * spirv-fuzz: Support bitwise or and xor in TransformationAddBitInstructionSynonym (#4310)

  [ Mostafa Ashraf ]
  * spirv-fuzz: Improve TransformationAddBitInstructionSynonym to check integer signedness (#4312)

  [ David Neto ]
  * Support Intel extensions for fixed point and hls-float (#4321)

  [ Ashley Hauck ]
  * Add SPV_KHR_vulkan_memory_model to aggressive_dead_code_elim (#4320)

  [ sfricke-samsung ]
  * spirv-val: Vulkan Storage Class for Execution Model (#4212)

  [ alan-baker ]
  * Support SPV_KHR_subgroup_uniform_control_flow (#4318)

  [ John Zupin ]
  * packaging: add spirv-headers version to control dependency

  [ alan-baker ]
  * Update SPIRV-Headers deps (#4328)

  [ Diego Novillo ]
  * Update CHANGES file for upcoming release.

 -- John Zupin <john@odin>  Fri, 25 Jun 2021 14:07:13 -0600

spirv-tools (2020.7+54~rc1-1lunarg20.04-1) focal; urgency=medium

  [ seppala2 ]
  * spirv-opt: Don't call GenerateCopy for mismatched image types (#4126)

  [ Ben Clayton ]
  * Fixes for the vscode language server extension (#4150)

  [ Steven Perron ]
  * Use standard function to get stdin to binary mode. (#4141)

  [ alan-baker ]
  * Require an OpSelectionMerge before an OpSwitch (#4154)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add persistent state to the fuzzer (#4137)

  [ Alastair Donaldson ]
  * spirv-fuzz: Handle Vulkan SPIR-V versions (#4156)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix PartialCount (#4159)
  * spirv-fuzz: Fix the bug in TransformationReplaceBranchFromDeadBlockWithExit (#4140)

  [ sfricke-samsung ]
  * spirv-val: Vulkan 64-bit OpAtomicStore check (#4163)

  [ Corentin Wallez ]
  * Fix -Wextra-semi-stmt -Wsuggest-destructor-override -Wdeprecated-copy-dtor (#4164)

  [ Daniel Koch ]
  * Add `void` in function declaration to keep some compilers happy (#4160)

  [ Alastair Donaldson ]
  * spirv-fuzz: Avoid unnecessary dependency (#4165)

  [ Corentin Wallez ]
  * Suppress warning (#4168)
  * BUILD.gn: fix typo for 'cflags' (#4169)
  * Remove usage of std::iterator. (#4171)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add buggy test (#4180)

  [ Alastair Donaldson ]
  * spirv-fuzz: Avoid invalidating analyses (#4176)

  [ David Neto ]
  * Support SPV_KHR_linkonce_odr, SPV_KHR_expect_assume (#4161)

  [ sfricke-samsung ]
  * spirv-val: Label VUID 04634 (#4181)
  * spirv-val: Add Vulkan Invocation Sematics check (#4182)

  [ John Zupin ]
  * packaging: updated debian/copyright file

  [ Jaebaek Seo ]
  * Accept OpImageTexelPointer user in scalar-replacement (#4187)

  [ Alastair Donaldson ]
  * spirv-fuzz: Make PermutePhiOperands more efficient (#4191)
  * spirv-fuzz: Make adding equation instructions more efficient (#4190)
  * spirv-fuzz: Locate instructions more efficiently (#4189)

  [ sfricke-samsung ]
  * spirv-val: Add Vulkan Execution Scope checks (#4183)

  [ timvpGoogle ]
  * Roll deps (#4185)

  [ sfricke-samsung ]
  * spirv-val: Fix Int64Atomics check (#4192)

  [ Alastair Donaldson ]
  * spirv-fuzz: Apply fuzzer pass before checking exit conditions (#4199)

  [ sfricke-samsung ]
  * spirv-val: Label VUID 04667 (#4201)
  * spirv-val: Label VUID 04643 (#4202)
  * spirv-val: Refactor of atomic pass (#4200)

  [ Alastair Donaldson ]
  * spirv-fuzz: Remove AddType methods from fuzzerutil (#4204)
  * spirv-fuzz: Manage available instructions efficiently (#4177)
  * spirv-fuzz: Avoid invalidating analyses in various transformations (#4205)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add WGSL compatibility flag to context (#4193)

  [ Alastair Donaldson ]
  * spirv-fuzz: Improve transformation test oracles (#4207)
  * spirv-fuzz: Remove destructors from FuzzerPass subclasses (#4209)
  * spirv-fuzz: Call by value and move in transformations (#4208)

  [ David Neto ]
  * Make spirv-tools-build-version a common dependency (#4210)

  [ Jason Ekstrand ]
  * Add validation for SPV_EXT_shader_atomic_float_min_max (#4105)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix comments #4215

  [ Alastair Donaldson ]
  * spirv-fuzz: Optimize transformations (#4216)
  * spirv-fuzz: Do not add too many dead blocks (#4217)
  * spirv-fuzz: Avoid invalidating analyses when splitting blocks (#4218)
  * spirv-fuzz: Efficiency improvements to fuzzer pass (#4188)

  [ Greg Fischer ]
  * Add interpolate legalization pass (#4220)

  [ Alastair Donaldson ]
  * Typo fix (#4225)
  * spirv-reduce: Remove redundant r-value references (#4232)

  [ Paul Thomson ]
  * Fix clang-format-diff.py URL (#4233)

  [ Shahbaz Youssefi ]
  * Fix UWP build (#4235)

  [ Alastair Donaldson ]
  * spirv-fuzz: Accept limitations in AddFunction (#4226)

  [ sfricke-samsung ]
  * spriv-val: Fix clang-format bug for VUID string (#4238)

  [ Jakub Kuderski ]
  * Update CHANGES

 -- John Zupin <john@odin>  Tue, 27 Apr 2021 13:28:06 -0600

spirv-tools (2020.7+2~rc2-1lunarg20.04-1) focal; urgency=medium

  * packaging: updated LunarG's copyrights

 -- John Zupin <john@odin>  Thu, 25 Feb 2021 13:48:23 -0700

spirv-tools (2020.7+2~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Marijn Suijten ]
  * opt: Run DCE when SPV_KHR_shader_clock is used (#4049)

  [ alan-baker ]
  * Allow forward pointer to be used in types generally (#4044)

  [ sfricke-samsung ]
  * spirv-val: Add last Position VUID (#4052)
  * spirv-val: Add last ViewportIndex and Layer VUID (#4053)
  * spirv-val: Add last ClipDistance and CullDistance VUID (#4054)
  * spirv-val: Add last TessLevelOuter and TessLevelInner VUID (#4055)

  [ David Neto ]
  * validate StorageImageMultisampled capability (#4062)

  [ Ryan Harrison ]
  * Force using Python 3 git-sync-deps (#4067)

  [ David Neto ]
  * validate OpTypeImage Sampled values for environemnts (#4064)
  * validation: tighter validation of multisampled images (#4059)
  * validation: validate return type of OpImageRead (#4072)

  [ Alastair Donaldson ]
  * spirv-fuzz: Fix OpPhi handling in DuplicateRegionWithSelection (#4065)

  [ sfricke-samsung ]
  * spirv-val: Add Subgroup VUIDs (#4074)
  * spirv-val: Add first StandAlone VUID 04633 (#4077)
  * spirv-val: Add Vulkan Group Operation VUID (#4086)
  * spirv-val: Add Vulkan ImageTexelPointer format check (#4087)
  * spirv-val: Add Vulkan ForwardPointer VUID (#4089)
  * spirv-val: Fix Vulkan image sampled check (#4085)
  * spirv-val: Add Vulkan FP Mode VUID (#4088)

  [ Steven Perron ]
  * Build deps: dump ini from 1.3.5 to 1.3.7 in tools/sva (#4092)
  * Fix binding number calculation in desc sroa (#4095)

  [ sfricke-samsung ]
  * spirv-val: Add Vulkan decroation VUID (#4090)
  * spirv-val: Label standalone Vulkan VUID (#4091)

  [ David Neto ]
  * use std::string::empty() to test for emptiness (#4098)

  [ greg-lunarg ]
  * Generate differentiated error codes for buffer oob checking (#4097)

  [ dan sinclair ]
  * Revert "Generate differentiated error codes for buffer oob checking (#4097)" (#4100)

  [ Pierre Moreau ]
  * Linker usability improvements (#4084)

  [ Jaebaek Seo ]
  * Avoid integrity check failures caused by propagating line instructions (#4096)

  [ sfricke-samsung ]
  * spirv-val: Vulkan atomic storage class (#4079)

  [ Ryan Harrison ]
  * Remove WebGPU support (#4108)

  [ sfricke-samsung ]
  * spirv-val: Add Vulkan Addressing Model check (#4107)

  [ Ben Clayton ]
  * Migrate all Kokoro build scripts over to use the docker VM image (#4114)

  [ sfricke-samsung ]
  * spirv-val: Add Vulkan Memory Scope VUs (#4106)

  [ David Neto ]
  * Validate Sampled=1 for Vulkan ImageQuerySizeLod, ImageQueryLevels, ImageQueryLod (#4103)
  * Support pending Intel extensions (#4116)

  [ sfricke-samsung ]
  * spirv-val: Add Vulkan EXT builtins (#4115)

  [ mi-ac ]
  * Remove obsolete GN config (#4110)

  [ sfricke-samsung ]
  * spirv-val: Label VUID 04683 (#4121)
  * spirv-val: Label VUID 04662 (#4123)
  * spirv-val: Label Vulkan atomic semantics VUIDs (#4120)

  [ alan-baker ]
  * Add cmake to windows path for kokoro (#4129)

  [ sfricke-samsung ]
  * spirv-val: Add Vulkan image gather offset VUID (#4118)

  [ alan-baker ]
  * Validate VK_KHR_zero_initialize_workgroup_memory (#4124)

  [ Caio Marcelo de Oliveira Filho ]
  * Validate SPV_KHR_workgroup_memory_explicit_layout (#4128)

  [ Jaebaek Seo ]
  * Set correct scope and line info for DebugValue (#4125)

  [ Steven Perron ]
  * Mark module as modified if convert-to-half removes decorations. (#4127)

  [ sfricke-samsung ]
  * spirv-val: Add Vulkan PSB64 convert VUID (#4122)
  * spirv-val: label tests for VUID 04657 (#4119)
  * spirv-val: Add Vulkan Invariant Decoration VUID (#4132)
  * spirv-val: Fix/Label UniformConstant VUID (#4134)
  * spriv-val: Vulkan image gather constant component (#4133)

  [ dan sinclair ]
  * Update a few virtuals to overrides. (#4143)

  [ greg-lunarg ]
  * Generate differentiated error codes for buffer oob checking (#4144)

  [ Jaebaek Seo ]
  * Update CHANGES
  * Finalize SPIRV-Tools v2020.7
  * Start SPIRV-Tools v2021.0

 -- John Zupin <john@odin>  Mon, 22 Feb 2021 15:21:08 -0700

spirv-tools (2020.6-1lunarg20.04-1) focal; urgency=medium

  [ Vasyl Teliman ]
  * spirv-fuzz: Handle OpPhis in TransformationInlineFunction (#3833)

  [ Richard S. Wright Jr ]
  * Fix compiler error on macOS with XCode12 (#3836)

  [ Stefano Milizia ]
  * spirv-fuzz: Create synonym of int constant using a loop (#3790)

  [ Ryan Harrison ]
  * Validate SPIRV Version number when parsing binary header (#3834)

  [ Simran ]
  * Add missing backticks around <result-id> (#3840)

  [ Vasyl Teliman ]
  * spirv-fuzz: Move IRContext parameter into constructor (#3837)
  * spirv-fuzz: Support dead blocks in TransformationAddSynonym (#3832)

  [ Ehsan Nasiri ]
  * Update CHANGES
  * Finalize SPIRV-Tools v2020.5
  * Start SPIRV-Tools v2020.6

  [ Alastair Donaldson ]
  * spirv-fuzz: Use unique_ptr<FactManager> in TransformationContext (#3844)

  [ Paul Thomson ]
  * spirv-fuzz: fix test (#3845)

  [ Alastair Donaldson ]
  * spirv-fuzz: Return IR and transformation context after replay (#3846)

  [ André Perez ]
  * spirv-fuzz: Support OpNot bit instruction case (#3841)

  [ Antoni Karpiński ]
  * spirv-fuzz: Fix bug in TransformationDuplicateRegionWithSelection (#3819)

  [ Maksim Ivanov ]
  * Fix use-after-move in val/validate.cpp (#3848)

  [ dan sinclair ]
  * [spirv-dis] Add some context comments to disassembly. (#3847)

  [ Alastair Donaldson ]
  * spirv-fuzz: Report fresh ids in transformations (#3856)
  * spirv-fuzz: Fix flatten conditional branch transformation (#3859)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix TransformationRecordSynonymousConstants (#3868)
  * spirv-fuzz: Fix to FuzzerPassFlattenConditionalBranches (#3865)

  [ Alastair Donaldson ]
  * spirv-fuzz: Do not add constants for Block-decorated structs (#3862)
  * spirv-fuzz: Enable some passes with high probability (#3860)

  [ Vasyl Teliman ]
  * spirv-fuzz: TransformationWrapRegionInSelection (#3674)
  * spirv-fuzz: Refactor conditions in the fact manager (#3867)

  [ Jaebaek Seo ]
  * Debug info preservation in if-conversion pass (#3861)
  * Debug info preservation in redundancy-elimination pass (#3839)

  [ Stefano Milizia ]
  * spirv-fuzz: Merge the return instructions in a function (#3838)

  [ Alastair Donaldson ]
  * spirv-fuzz: Only recommend passes when a pass had an effect (#3863)
  * spirv-fuzz: Integrate spirv-reduce with shrinker (#3849)

  [ Vasyl Teliman ]
  * spirv-fuzz: Refactor fact manager tests (#3879)

  [ Jaebaek Seo ]
  * Debug info preservation in convert-local-access-chains pass (#3835)

  [ Alastair Donaldson ]
  * spirv-fuzz: Use overflow ids when inlining functions (#3880)
  * spirv-fuzz: Avoid using block-decorated structs in transformations (#3877)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix rvalue references (#3883)

  [ Alastair Donaldson ]
  * spirv-fuzz: Use overflow ids when duplicating regions (#3878)
  * spirv-fuzz: Transformation to add wrappers for OpKill and similar (#3881)

  [ Vasyl Teliman ]
  * spirv-fuzz: TransformationPropagateInstructionDown (#3692)

  [ Alastair Donaldson ]
  * spirv-fuzz: Replace dead-block terminators with OpKill etc. (#3882)

  [ dan sinclair ]
  * Update val to handle reversed instruction sections. (#3887)

  [ Alastair Donaldson ]
  * spirv-fuzz: Wrap OpKill and similar in function calls (#3884)
  * spirv-fuzz: Do not replace irrelevant ids that are not in blocks (#3892)
  * spirv-fuzz: Do not add synonyms involving irrelevant ids (#3890)
  * spirv-fuzz: Do not expose synonym facts for non-existent ids (#3891)
  * spirv-fuzz: Fix to duplicate region with selection (#3896)
  * spirv-fuzz: Fix to transformation that adds a synonym via a loop (#3898)
  * spirv-fuzz: Fixes related to irrelevant ids (#3901)
  * spirv-fuzz: Do not allow creation of constants of block-decorated structs (#3903)
  * spirv-fuzz: Avoid creating blocks without parents (#3908)
  * spirv-fuzz: Fix handling of OpPhi in FlattenConditionalBranch (#3916)
  * spirv-fuzz: Lower probability of adding bit instruction synonyms (#3917)
  * Temporary fix to make GoogleTest compile. (#3922)

  [ Jaebaek Seo ]
  * Add DebugValue for function param regardless of scope (#3923)

  [ Alastair Donaldson ]
  * spirv-fuzz: Wrap early terminators before merging returns (#3925)
  * spirv-fuzz: Fix to TransformationInlineFunction (#3913)
  * spirv-fuzz: Take care of OpPhi instructions when inlining (#3939)
  * spirv-fuzz: Do not allow sampled image load when flattening conditionals (#3930)
  * spirv-fuzz: Handle dead blocks in TransformationEquationInstruction (#3933)
  * spirv-fuzz: Fix to operand id type (#3937)
  * spirv-fuzz: Do not allow Block-decorated structs when adding parameters (#3931)
  * spirv-fuzz: Avoid void struct member when outlining functions (#3936)
  * spirv-val: Fix validation of OpPhi instructions (#3919)

  [ Tobski ]
  * Support SPV_KHR_fragment_shading_rate (#3943)
  * Add SPV_EXT_shader_image_int64 (#3852)

  [ Alastair Donaldson ]
  * spirv-fuzz: Use component-wise selectors when flattening conditional branches (#3921)
  * spirv-fuzz: Skip OpFunction when replacing irrelevant ids (#3932)
  * spirv-fuzz: Fix to TransformationDuplicateRegionWithSelection (#3941)
  * spirv-fuzz: Avoid the type manager when looking for struct types (#3963)
  * spirv-fuzz: Skip dead blocks in FuzzerPassAddOpPhiSynonyms (#3965)
  * spirv-fuzz: Avoid irrelevant constants in synonym-creating loops (#3967)
  * spirv-fuzz: Skip early terminator wrappers when merging returns (#3968)
  * spirv-fuzz: Handle more types when extending OpPhi instructions (#3969)
  * spirv-fuzz: Restrict fuzzer pass to reachable blocks (#3970)
  * spirv-fuzz: Do not produce OpPhis of type OpTypeSampledImage (#3964)
  * spirv-fuzz: Don't flatten conditional if condition is irrelevant (#3944)

  [ jonahryandavis ]
  * Update SPIRV-Headers revision in DEPS file (#3961)

  [ Alastair Donaldson ]
  * spirv-fuzz: Fix operand types (#3962)
  * spirv-fuzz: Fix to id availability (#3971)
  * spirv-fuzz: Tolerate absent ids in data synonym fact management (#3966)
  * spirv-fuzz: Fix off-by-one in TransformationCompositeConstruct (#3979)
  * spirv-fuzz: Pass OpUndef in function call if needed (#3978)
  * spirv-fuzz: Skip OpTypeSampledImage when propagating up (#3976)
  * spirv-fuzz: Do not add synonym-creating loops in dead blocks (#3975)
  * spirv-fuzz: Get order right for OpSelect arguments (#3974)
  * spirv-fuzz: Fix off-by-one error in replayer (#3982)
  * spirv-fuzz: Fix mismatch with shrinker step limit (#3985)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add FuzzerPassAddCompositeExtract (#3904)
  * spirv-fuzz: Don't replace irrelevant indices in OpAccessChain (#3988)

  [ André Perez ]
  * spirv-fuzz: Add expand vector reduction transformation (#3869)

  [ greg-lunarg ]
  * Fix bounds check instrumentation to handle 16-bit values (#3983)

  [ Jaebaek Seo ]
  * Add DebugValue for DebugDecl invisible to value assignment (#3973)

  [ Diego Novillo ]
  * Simplify logic to decide whether CCP modified the IR (#3997)

  [ Sidney Just ]
  * spirv-val: Allow the ViewportIndex and Layer built-ins on SPIR-V 1.5 (#3986)

  [ David Neto ]
  * Avoid copying a ref in a loop (#4000)

  [ Ben Clayton ]
  * CMake: Add SPIRV_TOOLS_BUILD_STATIC flag (#3910)

  [ Jaebaek Seo ]
  * Propagate OpLine to all applied instructions in spirv-opt (#3951)

  [ Junda Liu ]
  * spirv-opt: Add support to prevent functions from being inlined if they have DontInline flag (#3858)

  [ Jaebaek Seo ]
  * Temporarily add EmptyPass to prevent glslang from failing (#4004)

  [ André Perez ]
  * spirv-fuzz: Fix bug related to transformation applicability (#3990)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix bugs in TransformationFlattenConditionalBranch (#4006)
  * spirv-fuzz: Fix invalid equation facts (#4009)
  * spirv-fuzz: Fix assertion failure in FuzzerPassAddCompositeExtract (#3995)

  [ Alastair Donaldson ]
  * spirv-fuzz: Add support for reining in rogue fuzzer passes (#3987)
  * spirv-fuzz: Fixes to pass management (#4011)

  [ Diego Novillo ]
  * Fix SSA re-writing in the presence of variable pointers. (#4010)

  [ Jaebaek Seo ]
  * Add DebugValue for invisible store in single_store_elim (#4002)

  [ alan-baker ]
  * Add dead function elimination to -O (#4015)

  [ sfricke-samsung ]
  * spirv-val: Label Layer and ViewportIndex VUIDs (#4013)
  * spirv-val: Fix SPV_KHR_fragment_shading_rate VUID label (#4014)

  [ David Neto ]
  * Use less stack space when validating Vulkan builtins (#4019)

  [ Jaebaek Seo ]
  * spirv-opt: properly preserve DebugValue indexes operand (#4022)

  [ Alastair Donaldson ]
  * spirv-opt: Set parent when adding basic block (#4021)

  [ greg-lunarg ]
  * Fix buffer oob instrumentation for matrix refs (#4025)

  [ David Neto ]
  * Update MeshShadingNV dependencies (and land Ray tracing updates) (#4028)

  [ Alastair Donaldson ]
  * spirv-fuzz: Do not flatten conditionals that create synonyms (#4030)
  * spirv-fuzz: Fix facts arising from CompositeConstruct (#4034)

  [ David Neto ]
  * Remove prototype for unimplemented method (#4031)
  * BuildModule: optionally avoid adding new OpLine instructions (#4033)

  [ Alastair Donaldson ]
  * Reject SPIR-V that applies void to OpUndef, OpCopyObject, OpPhi (#4036)

  [ Daniel Koch ]
  * Update spirv-header deps (#4040)

  [ greg-lunarg ]
  * Add texel buffer out-of-bounds checking instrumentation (#4038)

  [ Daniel Koch ]
  * Add validation support for the ray tracing built-in variables (#4041)

  [ Steven Perron ]
  * Handle 8-bit index in elim dead member (#4043)

  [ greg-lunarg ]
  * Change ref_analysis to RefAnalysis to follow coding standards. (#4045)

  [ Diego Novillo ]
  * Update CHANGES

  [ Ehsan ]
  * Do run DCE if SPV_KHR_ray_query is used. (#4047)

  [ Diego Novillo ]
  * Update CHANGES
  * Finalize SPIRV-Tools v2020.6
  * Start SPIRV-Tools v2020.7

  [ Ehsan ]
  * Take new (raytracing) termination instructions into account. (#4050)

  [ Diego Novillo ]
  * Update CHANGES to include latest ray tacing fixes.

  [ John Zupin ]
  * packaging: update copyright

 -- John Zupin <john@odin>  Tue, 08 Dec 2020 10:26:36 -0700

spirv-tools (2020.4-131-1lunarg20.04-1) focal; urgency=medium

  [ Steven Perron ]
  * Start SPIRV-Tools v2020.5

  [ Antoni Karpiński ]
  * spirv-fuzz: adds TransformationReplaceCopyObjectWithStoreLoad (#3567)
  * spirv-fuzz: adds TransformationReplaceCopyMemoryWithLoadStore (#3575)

  [ Vasyl Teliman ]
  * spirv-fuzz: Test usages of IdIsIrrelevant fact (#3578)
  * spirv-fuzz: Create a helper in fuzzerutil to reuse function type (#3572)

  [ Ryan Harrison ]
  * Change DEPS rolling script to point at external/ (#3584)

  [ Vasyl Teliman ]
  * spirv-fuzz: Don't use default parameters (#3583)

  [ Alastair Donaldson ]
  * spirv-fuzz: Set message consumer in replayer when shrinking (#3591)

  [ Stefano Milizia ]
  * spirv-fuzz: Split blocks starting with OpPhi before trying to outline (#3581)
  * spirv-fuzz: Generalise transformation access chain (#3546)
  * spirv-fuzz: Relax type checking for int contants (#3573)

  [ Jaebaek Seo ]
  * Preserve OpenCL.DebugInfo.100 through private-to-local pass (#3571)

  [ Antoni Karpiński ]
  * spirv-fuzz: adds TransformationReplaceLoadStoreWithCopyMemory (#3586)

  [ Steven Perron ]
  * build(deps): bump lodash from 4.17.15 to 4.17.19 in /tools/sva (#3596)

  [ Pierre Moreau ]
  * Update OpenCL capabilities validation (#3149)

  [ Jaebaek Seo ]
  * Preserve debug info in scalar replacement pass (#3461)

  [ David Neto ]
  * Avoid operand type range checks (#3379)

  [ Ben Clayton ]
  * CMake: Enable building with BUILD_SHARED_LIBS=1 (#3490)

  [ rdb ]
  * Fix SyntaxWarning in Python 3.8 (#3388)

  [ André Perez ]
  * spirv-fuzz: Implement the OpTranspose linear algebra case (#3589)

  [ Ryan Harrison ]
  * Rolling 4 dependencies (#3601)

  [ André Perez ]
  * spirv-fuzz: Add condition to make functions livesafe (#3587)

  [ Alastair Donaldson ]
  * Avoid use of 'sanity' and 'sanity check' in the code base (#3585)

  [ Vasyl Teliman ]
  * spirv-fuzz: Remove non-deterministic behaviour (#3608)
  * spirv-fuzz: Relax type constraints in DataSynonym facts (#3602)

  [ dan sinclair ]
  * Update some language usage. (#3611)

  [ Vasyl Teliman ]
  * spirv-fuzz: Compute corollary facts from OpBitcast (#3538)

  [ André Perez ]
  * spirv-fuzz: Implement the OpOuterProduct linear algebra case (#3617)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix memory bugs (#3622)

  [ alan-baker ]
  * Validator support for non-semantic clspv reflection (#3618)

  [ Jaebaek Seo ]
  * Debug info preservation in loop-unroll pass (#3548)

  [ Stefano Milizia ]
  * spirv-fuzz: Pass to replace int operands with ints of opposite signedness (#3612)
  * spirv-fuzz: Transformation to add loop preheader (#3599)

  [ John Zupin ]
  * debian: remove README.Debian

  [ Vasyl Teliman ]
  * Fix typo in ASAN CI build (#3623)

  [ Jaebaek Seo ]
  * Remove DebugDeclare only for target variables in ssa-rewrite (#3511)

  [ Vasyl Teliman ]
  * spirv-fuzz: TransformationMoveInstructionDown (#3477)
  * spirv-fuzz: Refactor boilerplate in TransformationAddParameter (#3625)
  * spirv-fuzz: Handle capabilities during module donation (#3651)
  * spirv-fuzz: Remove OpFunctionCall operands in correct order (#3630)
  * spirv-fuzz: Fix FuzzerPassCopyObjects (#3638)
  * spirv-fuzz: Handle OpPhi during constant obfuscation (#3640)
  * spirv-fuzz: Handle OpPhis in livesafe functions (#3642)

  [ André Perez ]
  * spirv-opt: Improve the code of the Instruction class (#3610)

  [ Jaebaek Seo ]
  * OpenCL.DebugInfo.100 DebugTypeArray with variable size (#3549)

  [ Stefano Milizia ]
  * spirv-fuzz: make outliner pass use additional transformations (#3604)

  [ André Perez ]
  * spirv-fuzz: iterate over blocks in replace linear algebra pass (#3654)
  * spirv-fuzz: Add TransformationMakeVectorOperationDynamic (#3597)

  [ Antoni Karpiński ]
  * spirv-fuzz: TransformationReplaceAddSubMulWithCarryingExtended (#3598)

  [ Steven Perron ]
  * Avoid using /MP4 for clang on windows. (#3662)

  [ Ryan Harrison ]
  * Roll 2 dependencies (#3677)

  [ Steven Perron ]
  * Handle no index access chain in local access chain convert (#3678)

  [ Vasyl Teliman ]
  * spirv-fuzz: FuzzerPassPropagateInstructionsUp (#3478)

  [ André Perez ]
  * spirv-opt: Add spvOpcodeIsAccessChain (#3682)
  * spirv-fuzz: Fix in operand type assertion (#3666)

  [ alan-baker ]
  * Only validation locations for appropriate execution models (#3656)

  [ Jaebaek Seo ]
  * Validate more OpenCL.DebugInfo.100 instructions (#3684)
  * Preserve debug info in dead-insert-elim pass (#3652)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix width in FuzzerPassAddEquationInstructions (#3685)
  * Fix the bug (#3683)

  [ André Perez ]
  * spirv-fuzz: Ignore specialization constants (#3664)
  * spirv-fuzz: consider additional access chain instructions (#3672)
  * spirv-fuzz: Check integer and float width capabilities (#3670)

  [ Vasyl Teliman ]
  * Fix the bug (#3680)

  [ alan-baker ]
  * Improve non-semantic instruction handling in the optimizer (#3693)

  [ Vasyl Teliman ]
  * spirv-fuzz: Support identical predecessors in TransformationPropagateInstructionUp (#3689)

  [ Stefano Milizia ]
  * spirv-fuzz: Fuzzer pass to randomly apply loop preheaders (#3668)

  [ Antoni Karpiński ]
  * spirv-fuzz: Improve code coverage of tests (#3686)

  [ Jaebaek Seo ]
  * Allow DebugTypeTemplate for Type operand (#3702)

  [ André Perez ]
  * spirv-fuzz: Check header dominance when adding dead block (#3694)

  [ Jack Andersen ]
  * Fix -Wrange-loop-analysis warning (#3712)

  [ André Perez ]
  * spirv-fuzz: Check termination instructions when donating modules (#3710)
  * spirv-opt: Implement opt::Function::HasEarlyReturn function (#3711)

  [ Jaebaek Seo ]
  * Let ADCE pass check DebugScope (#3703)

  [ Antoni Karpiński ]
  * spirv-fuzz: Support pointer types in FuzzerPassAddParameters (#3627)
  * spirv-fuzz: add FuzzerPassAddCompositeInserts (#3606)

  [ Diego Novillo ]
  * CCP should mark IR changed if it created new constants. (#3732)

  [ André Perez ]
  * spirv-fuzz: Add words instead of logical operands (#3728)

  [ Steven Perron ]
  * Add undef for inlined void function (#3720)

  [ greg-lunarg ]
  * Fix SSA-rewrite to remove DebugDeclare for variables without loads (#3719)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix MaybeGetZeroConstant (#3740)

  [ André Perez ]
  * spirv-fuzz: Add inline function transformation (#3517)

  [ Vasyl Teliman ]
  * spirv-fuzz: Split the fact manager into multiple files (#3699)

  [ greg-lunarg ]
  * Fix DebugNoScope to not output InlinedAt operand. (#3748)

  [ Alastair Donaldson ]
  * spirv-fuzz: Overflow ids (#3734)

  [ Jaebaek Seo ]
  * Handle DebugScope in compact-ids pass (#3724)

  [ greg-lunarg ]
  * Do not register DebugFunction for functions optimized away. (#3749)

  [ Alastair Donaldson ]
  * spirv-fuzz: Do not make synonyms of void result ids (#3747)

  [ Stefano Milizia ]
  * Add LoopNestingDepth function to StructuredCFGAnalysis (#3754)
  * spirv-fuzz: Create synonym via OpPhi and existing synonyms (#3701)

  [ Alastair Donaldson ]
  * spirv-fuzz: Remove opaque pointer design pattern (#3755)

  [ Jaebaek Seo ]
  * Correctly replace debug lexical scope of instruction (#3718)

  [ Stefano Milizia ]
  * spirv-fuzz: Compute interprocedural loop nesting depth of blocks (#3753)

  [ Vasyl Teliman ]
  * spirv-fuzz: TransformationMutatePointer (#3737)

  [ Stefano Milizia ]
  * spirv-fuzz: Transformation to replace the use of an irrelevant id (#3697)
  * spirv-fuzz: Replace id in OpPhi coming from a dead predecessor (#3744)
  * spirv-fuzz: Fix GetIdEquivalenceClasses (#3767)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add support for BuiltIn decoration (#3736)

  [ sfricke-samsung ]
  * spirv-val: Add Vulkan VUID labels to BuiltIn (#3756)

  [ Stefano Milizia ]
  * spirv-fuzz: Transformation to convert OpSelect to conditional branch (#3681)
  * spirv-opt: Add function to compute nesting depth of a block (#3771)

  [ Steven Perron ]
  * Allow SPV_KHR_8bit_storage extension. (#3780)

  [ Paul Thomson ]
  * Improve spirv-fuzz CMake code (#3781)
  * Add missing include (#3788)
  * spirv-fuzz: Add SPIRV_FUZZ_PROTOC_COMMAND (#3789)

  [ Antoni Karpiński ]
  * spirv-fuzz: Fix header guards in transformations/fuzzer passes (#3784)

  [ Alastair Donaldson ]
  * Favour 'integrity' over 'coherence' as a replacement for 'sanity'. (#3619)
  * spirv-reduce: Refactoring (#3793)
  * spirv-reduce: Support reducing a specific function (#3774)

  [ Antoni Karpiński ]
  * spirv-fuzz: Add TransformationDuplicateRegionWithSelection (#3773)

  [ Alastair Donaldson ]
  * Add missing file to BUILD.gn (#3798)

  [ Diego Novillo ]
  * Properly mark IR changed if instruction folder creates more than one constant. (#3799)

  [ sfricke-samsung ]
  * spirv-val: Add BaseInstance, BaseVertex, DrawIndex, and ViewIndex (#3782)

  [ Stefano Milizia ]
  * spirv-fuzz: Transformation to flatten conditional branch (#3667)
  * spirv-fuzz: Pass submanagers to other submanagers when necessary (#3796)

  [ Vasyl Teliman ]
  * spirv-fuzz: Support memory instructions MoveInstructionDown (#3700)
  * spirv-fuzz: Handle invalid ids in fact manager (#3742)

  [ Alastair Donaldson ]
  * Fix build errors (#3804)

  [ Vasyl Teliman ]
  * spirv-fuzz: Skip unreachable blocks (#3729)

  [ André Perez ]
  * spirv-fuzz: Add bit instruction synonym transformation (#3775)

  [ Vasyl Teliman ]
  * spirv-fuzz: Remove CanFindOrCreateZeroConstant (#3807)

  [ greg-lunarg ]
  * Add buffer oob check to bindless instrumentation (#3800)

  [ Stefano Milizia ]
  * spirv-fuzz: Improvements to random number generation (#3809)

  [ André Perez ]
  * spirv-fuzz: Use an irrelevant id for the unused components (#3810)

  [ Ryan Harrison ]
  * Fix missed modification flagging (#3814)

  [ sfricke-samsung ]
  * spirv-val: Add DeviceIndex (#3812)

  [ Antoni Karpiński ]
  * spirv-fuzz: Fix TransformationDuplicateRegionWithSelection (#3815)

  [ Alastair Donaldson ]
  * Fix header guard macros (#3811)

  [ Stefano Milizia ]
  * spirv-fuzz: Consider all ids from dead blocks irrelevant (#3795)

  [ Alastair Donaldson ]
  * spirv-fuzz: Add pass recommendations (#3757)
  * spirv-fuzz: Refactor fuzzer, replayer and shrinker (#3818)

  [ Steven Perron ]
  * Update CHANGES

 -- John Zupin <john@odin>  Mon, 28 Sep 2020 16:52:15 -0600

spirv-tools (2020.4-1lunarg20.04-1) focal; urgency=medium

  [ Steven Perron ]
  * Start SPIRV-Tools v2020.4

  [ Ryan Harrison ]
  * Rolling 4 dependencies (#3380)

  [ André Perez ]
  * spirv-fuzz: Add push id through variable transformation (#3359)

  [ Jaebaek Seo ]
  * Add tests for merge-return debug info preservation (#3389)

  [ Paul Thomson ]
  * Fix googletest inclusion (#3398)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix regression (#3396)

  [ André Perez ]
  * Fix instruction function use (#3390)
  * Add value instruction condition (#3385)

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix replayer bug (#3401)
  * spirv-fuzz: Add support for OpSpecConstant* (#3373)
  * spirv-fuzz: Add a test (#3238)

  [ David Neto ]
  * Fix round trip tests that weren't instantiated (#3417)

  [ Jaebaek Seo ]
  * Debug info preservation in ccp pass (#3420)

  [ Vasyl Teliman ]
  * Fix operand access (#3427)

  [ dan sinclair ]
  * Update access control lists. (#3433)

  [ André Perez ]
  * spirv-fuzz: Add replace linear algebra instruction transformation (#3402)
  * spirv-fuzz: Implement vector shuffle fuzzer pass (#3412)

  [ Ehsan ]
  * Eliminate branches with condition of OpConstantNull (#3438)

  [ Vasyl Teliman ]
  * Fix return type (#3435)
  * Add RemoveParameter method (#3437)

  [ Jaebaek Seo ]
  * Debug info preservation in dead branch elimination (#3425)

  [ Steven Perron ]
  * Use structured order to unroll loops. (#3443)

  [ Vasyl Teliman ]
  * spirv-fuzz: Swap operands in OpBranchConditional (#3423)
  * spirv-fuzz: Refactor variable creation (#3414)

  [ Ehsan ]
  * Updated desc_sroa to support flattening structures (#3448)

  [ Jaebaek Seo ]
  * [spirv-opt] debug info preservation in ssa-rewrite (#3356)

  [ Ryan Harrison ]
  * Add support for different default/trunks in roll-deps (#3442)

  [ Vasyl Teliman ]
  * spirv-fuzz: Permute OpPhi instruction operands (#3421)
  * spirv-fuzz: Add GetParameters (#3454)
  * spirv-fuzz: Implement FuzzerPassAddParameters (#3399)

  [ Ehsan ]
  * Support OpCompositeExtract pattern in desc_sroa (#3456)

  [ alan-baker ]
  * Validate location assignments (#3308)

  [ Jaebaek Seo ]
  * Clear debug information for kill and replacement (#3459)

  [ André Perez ]
  * Implement the OpMatrixTimesScalar linear algebra case (#3450)

  [ Ehsan ]
  * Add gl_BaseInstance to the name mapper. (#3462)

  [ Jaebaek Seo ]
  * Fix ADCE pass bug for mulitple entries (#3470)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add one parameter at a time (#3469)
  * spirv-fuzz: Add FuzzerPassAddCopyMemoryInstructions (#3391)
  * spirv-fuzz: Add fuzzerutil::FindOrCreate* (#3479)
  * Fix regression (#3481)
  * spirv-fuzz: TransformationInvertComparisonOperator (#3475)

  [ Jaebaek Seo ]
  * Debug info preservation in copy-prop-array pass (#3444)

  [ Vasyl Teliman ]
  * spirv-fuzz: fuzzerutil::MaybeGetConstant* #3487

  [ André Perez ]
  * spirv-fuzz: Implement the OpVectorTimesMatrix linear algebra case (#3489)
  * spirv-fuzz: Add variables with workgroup storage class (#3485)
  * spirv-fuzz: Add image sample unused components transformation (#3439)

  [ Jaebaek Seo ]
  * Preserve OpenCL.100.DebugInfo in reduce-load-size pass (#3492)

  [ André Perez ]
  * Implement the OpMatrixTimesVector linear algebra case (#3500)

  [ Vasyl Teliman ]
  * spirv-fuzz: TransformationReplaceParameterWithGlobal (#3434)

  [ greg-lunarg ]
  * Upgrade elim-local-single-block for OpenCL.DebugInfo.100 (#3451)

  [ Jaebaek Seo ]
  * Fix build failure (#3508)

  [ Stefano Milizia ]
  * Implement transformation to record synonymous constants. (#3494)

  [ Jaebaek Seo ]
  * Preserve debug info in vector DCE pass (#3497)

  [ greg-lunarg ]
  * Preserve OpenCL.DebugInfo.100 through elim-local-single-store (#3498)

  [ Vasyl Teliman ]
  * spirv-fuzz: Minor refactoring (#3507)
  * spirv-fuzz: Remove unused functions (#3510)
  * spirv-fuzz: TransformationAddSynonyms (#3447)

  [ André Perez ]
  * Support OpPhi when replacing boolean constant operand (#3518)
  * spirv-fuzz: Support adding dead break from back-edge block (#3519)

  [ greg-lunarg ]
  * Add support to GPU-AV instrumentation for Task and Mesh shaders (#3512)

  [ André Perez ]
  * spirv-fuzz: Implement the OpMatrixTimesMatrix linear algebra case (#3527)
  * spirv-fuzz: Fix instruction insertion issue (#3521)

  [ Jaebaek Seo ]
  * Rewrite KillDebugDeclares() (#3513)

  [ Alastair Donaldson ]
  * spirv-fuzz: Add replay range option (#3535)

  [ Stefano Milizia ]
  * spirv-fuzz: Fuzzer pass to interchange zero-like constants (#3524)

  [ Vasyl Teliman ]
  * spirv-opt: Add support for OpLabel to dominator analysis (#3516)
  * spirv-fuzz: Remove TransformationCopyObject (#3531)

  [ alan-baker ]
  * Fix reachability in the validator (#3541)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add support for OpConvert to TransformationEquationInstruction (#3472)
  * spirv-fuzz: Add support for OpBitcast to TransformationEquationInstruction (#3523)

  [ Stefano Milizia ]
  * spirv-fuzz: Assert false in IsApplicable method of TransformationAccessChain (#3528)
  * spirv-fuzz: Implement MaybeApplyTransformation helper function (#3540)
  * Change MaybeApplyTransformation to return a boolean (#3555)

  [ Antoni Karpiński ]
  * spirv-fuzz: support floating-point in TransformationInvertComparisonOperator (#3551)

  [ David Neto ]
  * Permit Simple and GLSL450 memory model in WEBGPU_0 (#3463)

  [ alan-baker ]
  * Store location values sparsely (#3488)

  [ Antoni Karpiński ]
  * spirv-fuzz: add TransformationAddRelaxedDecoration (#3545)

  [ Stefano Milizia ]
  * spirv-fuzz: refactor to use RemoveAtRandomIndex (#3560)

  [ Vasyl Teliman ]
  * spirv-fuzz: Add IdIsIrrelevant fact (#3561)
  * spirv-fuzz: Add is_irrelevant parameter (#3563)

  [ Stefano Milizia ]
  * spirv-fuzz: Extend TransformationRecordSynonymousConstants to allow composite constants (#3537)

  [ Vasyl Teliman ]
  * spirv-fuzz: Use irrelevant constants (#3565)

  [ vkushwaha-nv ]
  * Add changes for SPV_EXT_shader_atomic_float (#3562)

  [ Vasyl Teliman ]
  * spirv-fuzz: TransformationReplaceParamsWithStruct (#3455)

  [ greg-lunarg ]
  * Preserve OpenCL.DebugInfo.100 through elim-dead-code-aggressive (#3542)

  [ Steven Perron ]
  * Sink pointer instructions in merge return (#3569)

  [ alan-baker ]
  * Support SPV_KHR_terminate_invocation (#3568)

  [ Steven Perron ]
  * Update CHANGES

  [ Vasyl Teliman ]
  * spirv-fuzz: Fix usages of irrelevant constants (#3566)

  [ Steven Perron ]
  * Finalize SPIRV-Tools v2020.4

  [ John Zupin ]
  * copyright: update for release
  * copyright: updated for lunarg debian files

 -- John Zupin <john@odin>  Mon, 27 Jul 2020 14:19:47 -0600

spirv-tools (2020.3-1) bionic; urgency=medium

  * Initial release (Closes: #nnnn)  <nnnn is the bug number of your ITP>

 -- John Zupin <john@unknown>  Tue, 23 Jun 2020 12:12:22 -0600
